/**
 * \file main.cpp
 *
 * \author Jordan Hybki (@jh9587)
 * 
 * Example of how to run each function within emgToolbox class.
 */

#include "../source/emgToolbox.h"
#include <iostream>
#include <vector>

using namespace std;

int main()
{
    double arr[11] = {-0.00157442000509990,0.00238013640215166,0.00749700412825595,-0.00648763085360877,0.00818009382730489,0.0161568722972018,0.00623325729132609,0.00301964730413982,0.0130412243003020,0.0210107991908192,0.00553392028962171};
    double X0[251] = {0.0126028184348814,0.00454520776248943,0.0110043151049481,0.00267095911947809,-0.00524158181679216,0.0134978029371346,0.0123285893913274,0.0165400112969873,0.00155045464169026,0.00194884932347646,0.00509249176406693,-5.70969184957559e-05,0.0369135425341380,0.0137153352128525,0.00346873675545291,0.0142432290527496,0.0222952826424725,0.0167759678656767,0.0191664964499449,0.0148074548240685,-0.00507144899100580,0.00240106679256384,0.0205984277286783,0.00801915050403180,0.0125920146194335,0.0155492450512301,-0.000214216765194457,0.0119011278993806,0.00565211661474729,-0.00474166655890070,0.0139323296925467,0.00155918797945018,0.00497165555644194,-0.00339219847269793,0.00397036314600464,0.0143953242452541,0.0257150626814332,-0.00131548691416328,0.0134531866633769,0.0152338767757166,0.0204396400912136,0.0225986906219460,-0.00105879506889812,0.0106137314657714,0.0223069368609986,0.0154510573196156,0.0239997595273608,0.0221648831942432,0.0334379960327461,-0.0162002326080676,0.00668149437745067,0.00661366472081013,-0.00423622806365839,0.00478763284229532,0.0242223320421318,0.0105929346320320,0.0196058523057172,0.0263490722032405,0.00709731004202593,0.00590382628554444,-0.00317119646975727,0.00722703235644018,0.00285307277396522,0.00780714567026874,0.00774416883153805,0.00271635996888923,-0.00144682787033701,0.00622312688197506,0.0101462590349818,0.00104328725190157,0.0135223937459084,0.00855871992530961,0.00739343605551120,0.0191173328995951,0.0330618242015673,0.0184764343762861,0.0164269086947992,0.0100472004464365,0.0112978651215934,0.0158142927241028,0.00447019717021839,-0.00492558795155321,0.0142911185712260,0.00298133750013824,0.0139371699200445,0.00169457735088907,-0.00253417173336777,-0.00403430117226221,0.0128110146188365,0.0295453920046404,0.0120043804637693,0.0149050351854076,0.0114380903424203,0.0123009588569895,0.0336547508923074,0.00218731785579572,0.00841110726686744,0.00326290647600352,0.0171404819381030,0.0125518923678767,0.00672737712669883,0.0174210709381367,-5.70393532845759e-05,0.0111942067727222,0.0120044175628734,0.0257385123860363,0.0153862757746210,0.0103306070700226,-0.00341746080322060,-0.00470908406934728,0.0159063095137358,0.00299816380826258,0.00758809288784172,0.00130583031594183,0.0118160318122483,0.0122787984441007,0.0274471993350627,0.0281787413004095,0.0206163290459646,0.0208398538559699,-0.00169672009135466,0.0227577346884409,0.000584276020211784,-0.00599450415628577,0.0416625311280659,0.0131866731206772,0.00337063324148923,0.0100792589456022,0.0106900941910027,-0.0107002803258523,0.00284449935947199,0.0152931945336738,0.0103554031115133,-0.00662894856447335,0.00508507670117053,0.00849933121306011,0.0108133234660466,-0.00678776971289067,0.0125533608712195,0.0252905134358035,-0.00592726602262531,0.0143879028982054,0.0234365141705886,0.0138034770828384,0.0158906425483470,0.00524961791818734,0.00814810965311183,-0.00144715423503240,0.00878493938537165,0.00447382024165476,0.00341967224374906,0.0244725099802365,0.00882942635372761,0.0162993479002457,0.0137530719610252,-0.000148873356927213,-0.00889858215986208,-0.00433756492057559,0.0127594102271539,0.00698791974635752,0.0175950290888421,0.00620052515116551,-0.00322302930480471,0.0109633157710430,0.0210104791591114,0.0126541883215637,0.00814044640747371,0.00579066835773276,0.0226812211435784,0.0191430715644774,0.00570348544488869,-0.00346393843147969,0.000864496362178368,0.0133332669415721,-0.000925887664108063,0.00613048891675345,0.00877564822319430,0.00340222477384089,0.00375522560896386,0.00773687517442288,0.00449159046347665,-0.00342265082414859,0.0173658924841476,0.000804511259807577,0.0203503929497922,0.00656592629592669,0.00692117142356931,0.0229557082560223,0.0126108855728179,0.00597727598482022,0.00173044353194976,0.00482782922834006,0.0139990936694640,0.0184713423311787,0.0104801095670228,0.00507076924524298,0.0133543707517962,0.0167121444865115,0.00578337647709999,0.0244312650276216,0.00635719008727585,0.0189828815063947,0.0196834382813067,0.0105662742636036,0.00915333534082318,0.0187201041102415,-0.00803655327260582,0.0103374007683631,0.0106913860951329,0.0136558677860702,0.00115140305048790,-0.00410175366025607,-0.0163837960560119,0.0154510168334396,0.0207800634320016,0.00555669638782758,0.0337932697796306,0.00359024581639291,-0.00311281589368083,0.00854311938903101,0.0110578503589778,0.0168235229772266,0.0112103979836438,0.00236378852858337,-0.00523023071692662,0.00413307067982608,-0.00363743944741949,0.0172359479144432,0.00896372422866480,-0.00853005818232236,0.0136559467480580,0.000775918931612417,0.0235037753365345,0.0105219786667248,0.0122923326883344,0.00212620663342855,0.0152301640303770,0.0106490303883348,0.0121616713206400,0.00679726607406829,0.0164338000276206,-0.0143920614159571,0.0116568034785705,0.0204820655515325,0.00809333354371705,0.0157813357919509,0.00404504742794447,0.0117274821745615,0.00416023093989032,0.0214502586032493,0.0146994283562637};

    emgToolbox emgFunctions(X0, 251, 0.01);
    std::vector<double> result = { emgFunctions.ASM(), emgFunctions.ASS(), emgFunctions.AAC(),
                                    emgFunctions.ME(), emgFunctions.CARD(), emgFunctions.COV(),
                                    emgFunctions.DAMV(), emgFunctions.DASDV(), emgFunctions.DVARV(),
                                    emgFunctions.EMAV(), emgFunctions.EWL(), emgFunctions.IEMG(), 
                                    emgFunctions.IQR(), emgFunctions.KURT(), emgFunctions.LCOV(), 
                                    emgFunctions.LD(), emgFunctions.LDAMV(), emgFunctions.LDASDV(),
                                    emgFunctions.LTKEO(), emgFunctions.MYOP(), emgFunctions.MFL(), 
                                    emgFunctions.MMAV2(), emgFunctions.MMAV(), emgFunctions.MSR(), 
                                    emgFunctions.MAV(), emgFunctions.MAD(), emgFunctions.FZC(), 
                                    emgFunctions.RMS(), emgFunctions.SSI(), emgFunctions.SKEW(),
                                    emgFunctions.SSC(), emgFunctions.SD(), emgFunctions.TM(),
                                    emgFunctions.VAR(), emgFunctions.VAREMG(), emgFunctions.VO(),
                                    emgFunctions.WL(), emgFunctions.WA(), emgFunctions.ZC()};
    
    for (auto ele : result)
    {
        std::cout << ele << std::endl;
    }
    std::cout << "Size of array: " << result.size() << std::endl;
    
    
}
